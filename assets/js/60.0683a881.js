(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{580:function(e,t,v){"use strict";v.r(t);var a=v(2),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#什么是vue生命周期"}},[e._v("什么是vue生命周期？")])]),v("li",[v("a",{attrs:{href:"#vue生命周期的作用是什么"}},[e._v("vue生命周期的作用是什么")])]),v("li",[v("a",{attrs:{href:"#生命周期"}},[e._v("生命周期")])]),v("li",[v("a",{attrs:{href:"#vue第一次页面加载会触发哪几个钩子函数"}},[e._v("vue第一次页面加载会触发哪几个钩子函数？")])]),v("li",[v("a",{attrs:{href:"#简述每个周期具体适合哪些场景"}},[e._v("简述每个周期具体适合哪些场景？")])]),v("li",[v("a",{attrs:{href:"#dom-渲染在哪个周期中就已经完成"}},[e._v("DOM 渲染在哪个周期中就已经完成？")])]),v("li",[v("a",{attrs:{href:"#父子组件的生命周期"}},[e._v("父子组件的生命周期")])]),v("li",[v("a",{attrs:{href:"#vue官网直通车"}},[e._v("Vue官网直通车")])])])]),v("p"),e._v(" "),v("h2",{attrs:{id:"什么是vue生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是vue生命周期"}},[e._v("#")]),e._v(" 什么是vue生命周期？")]),e._v(" "),v("ul",[v("li",[e._v("Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载DOM-渲染、更新-渲染、卸载等一系列的过程，我们称这是 Vue 的生命周期。")])]),e._v(" "),v("h2",{attrs:{id:"vue生命周期的作用是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue生命周期的作用是什么"}},[e._v("#")]),e._v(" vue生命周期的作用是什么")]),e._v(" "),v("ul",[v("li",[e._v("Vue 所有的功能的实现都是围绕其生命周期进行的，在生命周期的不同阶段调用对应的钩子函数可以实现组件数据管理和DOM渲染两大重要功能。\n生命周期中有多个事件钩子，在控制整个vue实例的过程时更容易形成好的逻辑。")])]),e._v(" "),v("h2",{attrs:{id:"生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[e._v("#")]),e._v(" 生命周期")]),e._v(" "),v("ul",[v("li",[e._v("关于 Vue 生命周期，先放一张官方文档的图")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://image-static.segmentfault.com/174/175/1741752219-59c9b774a4ccf",alt:"Vue"}})]),e._v(" "),v("ul",[v("li",[e._v("一共8个阶段")])]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"}),v("p",[e._v("1、beforeCreate（创建前）")]),e._v(" "),v("p",[e._v("2、created（创建后）")]),e._v(" "),v("p",[e._v("3、beforeMount（载入前）")]),e._v(" "),v("p",[e._v("4、mounted（载入后）")]),e._v(" "),v("p",[e._v("5、beforeUpdate（更新前）")]),e._v(" "),v("p",[e._v("6、updated（更新后）")]),e._v(" "),v("p",[e._v("7、beforeDestroy（销毁前）")]),e._v(" "),v("p",[e._v("8、destroyed（销毁后）")])]),v("h2",{attrs:{id:"vue第一次页面加载会触发哪几个钩子函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue第一次页面加载会触发哪几个钩子函数"}},[e._v("#")]),e._v(" vue第一次页面加载会触发哪几个钩子函数？")]),e._v(" "),v("p",[e._v("beforeCreate、created、beforeMount、mounted")]),e._v(" "),v("h2",{attrs:{id:"简述每个周期具体适合哪些场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简述每个周期具体适合哪些场景"}},[e._v("#")]),e._v(" 简述每个周期具体适合哪些场景？")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("beforeCreate：")]),v("br"),e._v("\n创建前，此阶段为实例初始化之后，this指向创建的实例，此时的数据观察事件机制都未形成，不能获得DOM节点。\ndata，computed，watch，methods 上的方法和数据均不能访问。\n可以在这加个loading事件。")]),e._v(" "),v("li",[v("code",[e._v("created：")]),v("br"),e._v("\n创建后，此阶段为实例已经创建，完成数据（data、props、computed）的初始化导入依赖项。\n可访问 data computed watch methods 上的方法和数据。\n初始化完成时的事件写在这里，异步请求也适宜在这里调用（请求不宜过多，避免白屏时间太长）。\n可以在这里结束loading事件，还做一些初始化，实现函数自执行。\n未挂载DOM，若在此阶段进行DOM操作一定要放在Vue.nextTick()的回调函数中。")]),e._v(" "),v("li",[v("code",[e._v("beforeMount：")]),v("br"),e._v("\n挂载前，虽然得不到具体的DOM元素，但vue挂载的根节点已经创建，下面vue对DOM的操作将围绕这个根元素继续进行。\nbeforeMount这个阶段是过渡性的，一般一个项目只能用到一两次。")]),e._v(" "),v("li",[v("code",[e._v("mounted：")]),v("br"),e._v("\n挂载，完成创建vm.$el，和双向绑定\n完成挂载DOM和渲染，可在mounted钩子函数中对挂载的DOM进行操作。\n可在这发起后端请求，拿回数据，配合路由钩子做一些事情。")]),e._v(" "),v("li",[v("code",[e._v("beforeUpdate：")]),v("br"),e._v("\n数据更新前，数据驱动DOM。\n在数据更新后虽然没有立即更新数据，但是DOM中的数据会改变，这是vue双向数据绑定的作用。\n可在更新前访问现有的DOM，如手动移出添加的事件监听器。")]),e._v(" "),v("li",[v("code",[e._v("updated：")]),v("br"),e._v("\n数据更新后，完成虚拟DOM的重新渲染和打补丁。\n组件DOM已完成更新，可执行依赖的DOM操作。\n注意：不要在此函数中操作数据（修改属性），会陷入死循环。")]),e._v(" "),v("li",[v("code",[e._v("activated：")]),v("br"),e._v("\n在使用vue-router时有时需要使用keep-alive来缓存组件状态，这个时候created钩子就不会被重复调用了。\n如果我们的子组件需要在每次加载的时候进行某些操作，可以使用activated钩子触发。")]),e._v(" "),v("li",[e._v("deactivated："),v("br"),e._v("\nkeep-alive组件被移除时使用。")]),e._v(" "),v("li",[v("code",[e._v("beforeDestroy：")]),v("br"),e._v("\n销毁前，\n可做一些删除提示，如：您确定删除xx吗？")]),e._v(" "),v("li",[v("code",[e._v("destroyed：")]),v("br"),e._v("\n销毁后，当前组件已被删除，销毁监听事件，组件、事件、子实例也被销毁。\n这时组件已经没有了，无法操作里面的任何东西了。")])]),e._v(" "),v("h2",{attrs:{id:"dom-渲染在哪个周期中就已经完成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom-渲染在哪个周期中就已经完成"}},[e._v("#")]),e._v(" DOM 渲染在哪个周期中就已经完成？")]),e._v(" "),v("p",[e._v("mounted")]),e._v(" "),v("h2",{attrs:{id:"父子组件的生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#父子组件的生命周期"}},[e._v("#")]),e._v(" 父子组件的生命周期")]),e._v(" "),v("ul",[v("li",[e._v("执行顺序：")])]),e._v(" "),v("p",[e._v("父组件开始执行到beforeMount 然后开始子组件执行，最后是父组件mounted。\n如果有兄弟组件，父组件开始执行到beforeMount，然后兄弟组件依次执行到beforeMount，然后按照顺序执行mounted，最后执行父组件的mounted。")]),e._v(" "),v("p",[e._v("当子组件挂载完成后，父组件才会挂载。\n当子组件完成挂在后，父组件会主动执行一次beforeUpdated/updated钩子函数（仅首次）\n父子组件在data变化中是分别监控的，但是更新props中的数据是关联的。\n销毁父组件时，先将子组件销毁后才会销毁父组件。\n兄弟组件的初始化（mounted之前）是分开进行，挂载是从上到下依次进行\n当没有数据关联时，兄弟组件之间的更新和销毁是互不关联的")]),e._v(" "),v("h2",{attrs:{id:"vue官网直通车"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue官网直通车"}},[e._v("#")]),e._v(" Vue官网直通车")]),e._v(" "),v("blockquote",[v("p",[v("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/instance.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue官网"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);